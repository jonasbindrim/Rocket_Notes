read:
  get:
    summary: Returns the content of a single note
    tags:
      - note
    parameters:
      - name: title
        in: path
        required: true
        description: Title of the note
        schema:
          type: string
    responses:
      '200':
        description: The content of the requested note
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      '404':
        description: The note with the given title does not exist
listAll:
  get:
    summary: Lists the titles of all available notes
    tags:
      - note
    responses:
      '200':
        description: An array of all available notes
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  content:
                    type: string
delete:
  delete:
    summary: Deletes the note with the given title
    tags:
      - note
    parameters:
      - name: title
        in: path
        required: true
        description: Title of the note to delete
        schema:
          type: string
    responses:
      '200':
        description: The note was deleted
      '404':
        description: The note with the given title does not exist
create:
  post:
    summary: Creates a new note
    tags:
      - note
    requestBody:
      description: The content of the new note
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title: 
                type: string
              content:
                type: string
    responses:
      '201':
        description: The note was created successfully
      '409':
        description: A note with the same title already exists